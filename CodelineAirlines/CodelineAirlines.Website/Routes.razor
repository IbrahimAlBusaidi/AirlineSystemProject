@inject AuthenticationStateProvider authStateProvider

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(Program).Assembly" PreferExactMatches="true">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@CurrentLayout">
                <Authorizing>
                    <p>Authorizing...</p>
                </Authorizing>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    private Type CurrentLayout { get; set; } = typeof(MainLayout);

    protected override async Task OnInitializedAsync()
    {
        await SetCurrentLayout();
    }

    private async Task SetCurrentLayout()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        CurrentLayout = user.Identity != null && user.Identity.IsAuthenticated
            ? typeof(ClientLayout)
            : typeof(MainLayout);
    }
}
