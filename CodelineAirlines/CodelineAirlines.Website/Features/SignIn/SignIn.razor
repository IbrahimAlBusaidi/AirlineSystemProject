@page "/signin"

@inject NavigationManager NavManager
@inject IUserService UserService
@inject IAuthService authService
@inject AuthState AuthState

@attribute [AllowAnonymous]




<!-- 2) Sign-In Container Overlapping the Carousel -->
<MudContainer MaxWidth="MaxWidth.Medium" Class="signin-container fade-in-panel" Style="width: 600px;">
    <MudText Typo="Typo.h4" Align="Align.Center" Class="mb-4">Sign In</MudText>

    <MudForm @ref="form" Model="@signInModel" @bind-IsValid="@isValid" Class="signin-form">
        <MudTextField @bind-Value="signInModel.Email" Label="Email" Required="true" />
        <MudTextField @bind-Value="signInModel.Password" Label="Password" InputType="InputType.Password" Required="true" />

        <!-- Warning Alert -->
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <MudAlert Severity="Severity.Warning" Class="mt-3">@errorMessage</MudAlert>
        }

        <MudButton Variant="Variant.Filled"
                   Color="Color.Primary"
                   FullWidth="true"
                   OnClick="Login"
                   Disabled="!isValid"
                   Class="mt-4">
            Sign In
        </MudButton>
    </MudForm>

    <MudText Typo="Typo.subtitle2" Class="mt-4 text-center">
        Don't have an account? <MudLink Href="/signup">Sign Up</MudLink>
    </MudText>
</MudContainer>

@code {
    private SignInModel signInModel = new();
    private MudForm form;
    private bool isValid;
    private string errorMessage;

    private void Login()
    {
        form.Validate();
        if (form.IsValid)
        {
            var result = UserService.login(signInModel.Email, signInModel.Password);
            if (result != null) // success
            {
                errorMessage = string.Empty;
                authService.GenerateToken(result);

                if (result.UserRole == "superAdmin")
                {
                    AuthState.SetLoginState(true);
                    NavManager.NavigateTo("/superAdminPortal", true);
                }
                else if (result.UserRole.ToLower() == "admin")
                {
                    AuthState.SetLoginState(true);
                    NavManager.NavigateTo("/AdminHomePage", true);
                }
                else
                {
                    AuthState.SetLoginState(true);
                    NavManager.NavigateTo("/", true);
                }
            }
            else
            {
                errorMessage = "Invalid email or password. Please try again.";
            }
        }
    }

    public class SignInModel
    {
        public string Email { get; set; }
        public string Password { get; set; }
    }
}