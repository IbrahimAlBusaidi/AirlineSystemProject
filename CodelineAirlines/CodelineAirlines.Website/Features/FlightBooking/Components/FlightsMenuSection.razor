@inject IFlightService flightService
@inject NavigationManager NavManager

<div class="flights-container">
    <h3 class="section-title">Available Flights</h3>

    <div class="flight-panels">
        @if (flights != null && flights.Any())
        {
            @foreach (var flight in flights)
            {
                <CascadingValue Value="flight">
                    <FlightComponent />
                </CascadingValue>
            }
        }
        else
        {
            <NoFlightsComponent />
        }
    </div>
</div>

@code {
    public string? Origin = null;
    public string? Dest = null;
    public DateTime? startDate = null;
    public DateTime? endDate = null;

    private List<FlightOutputDTO> flights { get; set; } = new();

    protected override void OnInitialized()
    {
        var uri = NavManager.ToAbsoluteUri(NavManager.Uri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);

        Origin = queryParams["origin"];
        Dest = queryParams["dest"];
        if (queryParams["startdate"] != null && DateTime.TryParse(queryParams["startdate"], out var parsedStartDate))
        {
            startDate = parsedStartDate;
        }

        if (queryParams["enddate"] != null && DateTime.TryParse(queryParams["enddate"], out var parsedEndDate))
        {
            endDate = parsedEndDate;
        }

        if (Origin != null && Dest != null && startDate != null && endDate != null)
        {
            GetFilteredFlights();
        }
        else
        {
            GetFlights();
        }
    }

    private void GetFilteredFlights()
    {
        flights = flightService.GetAllFlights()
            .Where(f =>
                f.SourceAirportName == Origin &&
                f.DestinationAirportName == Dest &&
                f.ScheduledDepartureDate >= startDate &&
                f.ScheduledDepartureDate <= endDate &&
                (f.Status == "Scheduled" || f.Status == "ReScheduled"))
            .ToList();
    }

    private void GetFlights()
    {
        flights = flightService.GetAllFlights()
            .Where(f => f.Status == "Scheduled" || f.Status == "ReScheduled")
            .ToList();
    }
}

